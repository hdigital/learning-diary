{
  "hash": "c01168ad49ce86c161f9808a7bf578ce",
  "result": {
    "markdown": "---\ndate: \"2023-06-20\"\nimage: r-cell-conditional.png\ncategories: [R, Quarto]\n---\n\n\n# Conditional R cells\n\nFor R notebooks in Quarto not all information that can be presented in an html-document is feasible for the respective pdf-document. So sometimes, I want to include information in html but not in the pdf.\n\nInteractive data tables with [reactable](https://glin.github.io/reactable/) are an example. They allow to explore smaller data sets quickly within a notebook, but work only in html documents. A pdf simply fails to render with Quarto.\n\nSo I was looking for a solution to execute R code in a notebook only for the html-document but not the pdf.\n\nConditional chunk execution is not implemented in Quarto so far â€” see [ticket #3260](https://github.com/quarto-dev/quarto-cli/discussions/3260).\n\nHowever, for R I found an approach that is working well.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (knitr::is_html_output()) {\n  print(\"code block run\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"code block run\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!knitr::is_html_output()) {\n  print(\"code block not run\")\n}\n```\n:::\n\n\n---\n\nAn example for a notebook with a dynamic table in a [html document](/snippets/r-cell-conditional.html) and a static table in the [pdf document](/snippets/r-cell-conditional.pdf)\n\n![](r-cell-conditional.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}