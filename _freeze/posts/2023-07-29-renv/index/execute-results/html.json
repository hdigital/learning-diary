{
  "hash": "efbd63354b713dd59d05af1e8833914b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: \"2023-07-29\"\nimage: renv-logo.svg\ncategories: [R]\ntitle: \"Package versions with renv\"\ntoc: true\n---\n\n\n## Versions snapshot\n\n`renv::snapshot()` creates an `renv.lock` file that includes the versions of all R packages used in R code in the current project folder.\n\nThis is something I have looked for for a long time. In Python, I like to use [pip-compile](https://pip-tools.readthedocs.io/en/latest/#requirements-from-requirements-in) to pin my dependencies to specified versions. For R, I have just not realized that `renv` can also do that without creating a full `renv` project.\n\nThe full `renv` workflow has seemed to me to be overhead. I prefer to create fully reproducible environments with [Rocker](https://rocker-project.org/).\n\n\n::: {.cell}\n\n:::\n\n\n## Find project packages\n\n`renv::dependencies()` can be used to find all the packages used in a project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(renv)\n\ndependencies() |> select(-Source)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFinding R package dependencies ... Done!\n```\n\n\n:::\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Package    |Require |Version |Dev   |\n|:----------|:-------|:-------|:-----|\n|dplyr      |        |        |FALSE |\n|purrr      |        |        |FALSE |\n|renv       |        |        |FALSE |\n|callr      |        |        |FALSE |\n|conflicted |        |        |FALSE |\n|dplyr      |        |        |FALSE |\n|rmarkdown  |        |        |FALSE |\n|rmarkdown  |        |        |FALSE |\n|dplyr      |        |        |FALSE |\n|purrr      |        |        |FALSE |\n|renv       |        |        |FALSE |\n|callr      |        |        |FALSE |\n|conflicted |        |        |FALSE |\n|dplyr      |        |        |FALSE |\n\n</div>\n:::\n:::\n\n\nPackage version number can be added with some `tidyverse` magic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndependencies() |>\n  mutate(version = map_chr(Package, \\(.x) as.character(packageVersion(.x)))) |>\n  select(Package, version) |>\n  arrange(Package) |>\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFinding R package dependencies ... Done!\n```\n\n\n:::\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Package    |version |\n|:----------|:-------|\n|callr      |3.7.5   |\n|conflicted |1.2.0   |\n|dplyr      |1.1.4   |\n|purrr      |1.0.2   |\n|renv       |1.0.5   |\n|rmarkdown  |2.26    |\n\n</div>\n:::\n:::\n\n\n\n## Customized session info\n\nThis led me to a condensed version of loading all project packages before calling `sessionInfo()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflicted::conflicts_prefer(callr::run)\nmap_lgl(dplyr::pull(dependencies(), Package), require)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFinding R package dependencies ... Done!\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.3 (2024-02-29)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] rmarkdown_2.26   conflicted_1.2.0 callr_3.7.5      renv_1.0.5      \n[5] purrr_1.0.2      dplyr_1.1.4     \n\nloaded via a namespace (and not attached):\n [1] vctrs_0.6.5       cli_3.6.2         knitr_1.45        rlang_1.1.3      \n [5] xfun_0.42         processx_3.8.4    generics_0.1.3    jsonlite_1.8.8   \n [9] glue_1.7.0        htmltools_0.5.7   ps_1.7.6          fansi_1.0.6      \n[13] evaluate_0.23     tibble_3.2.1      fastmap_1.1.1     yaml_2.3.8       \n[17] lifecycle_1.0.4   memoise_2.0.1     compiler_4.3.3    htmlwidgets_1.6.4\n[21] pkgconfig_2.0.3   digest_0.6.35     R6_2.5.1          tidyselect_1.2.1 \n[25] utf8_1.2.4        pillar_1.9.0      magrittr_2.0.3    tools_4.3.3      \n[29] withr_3.0.0       cachem_1.0.8     \n```\n\n\n:::\n:::\n\n\n---\n\n![](lock-unsplash.jpg)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}