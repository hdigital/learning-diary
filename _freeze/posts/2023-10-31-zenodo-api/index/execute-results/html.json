{
  "hash": "a8cbc89945d3f5664618862b6c690a05",
  "result": {
    "markdown": "---\ndate: '2023-10-31'\nimage: zenodo-logo.png\ncategories:\n  - Python\n  - API\nformat:\n  html:\n    toc: true\ntitle: Zenodo API\n---\n\n\n\n\n\nThis week, I worked with the Zenodo API. My goals was to add Zenodo metadata to GitHub for the [partypositions-wikitags](https://github.com/hdigital/partypositions-wikitags) project.\n\nThe code of the project is archived at Zenodo with the DOI [10.5281/zenodo.7043510](https://zenodo.org/doi/10.5281/zenodo.7043510).\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nimport requests\n\nheaders = {\"accept\": \"text/x-bibliography\"}\nr = requests.get(\"https://doi.org/10.5281/zenodo.7043510\", headers=headers)\n\nr.text\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n'DÃ¶ring, H., &amp; Herrmann, M. (2023). <i>Party positions from Wikipedia tags (July 2023)</i> (Version 23.07) [Computer software]. Zenodo. https://doi.org/10.5281/ZENODO.7043510'\n```\n:::\n:::\n\n\n## DOI API\n\nSo here is some metadata information. Lets start with the DOI API.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport requests\n\ndoi = \"10.5281/zenodo.7043510\"\n\nheaders = {\"accept\": \"application/vnd.citationstyles.csl+json\"}\nr = requests.get(f\"https://doi.org/{doi}\", headers=headers)\n\nr.json()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n{'type': 'book',\n 'id': 'https://doi.org/10.5281/zenodo.7043510',\n 'language': 'en',\n 'author': [{'family': 'DÃ¶ring', 'given': 'Holger'},\n  {'family': 'Herrmann', 'given': 'Michael'}],\n 'issued': {'date-parts': [[2023, 8, 23]]},\n 'abstract': 'Estimation of party positions from Wikipedia tags with Stan (July 2023)',\n 'DOI': '10.5281/ZENODO.7043510',\n 'publisher': 'Zenodo',\n 'title': 'Party positions from Wikipedia tags (July 2023)',\n 'URL': 'https://zenodo.org/record/7043510',\n 'copyright': 'Open Access',\n 'version': '23.07'}\n```\n:::\n:::\n\n\n## Zenodo record\n\nWe can also access a [record](https://developers.zenodo.org/#retrieve37) through the Zenodo API. This does not require a [Zenodo access token](https://developers.zenodo.org/#authentication).\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nr = requests.get(\"https://zenodo.org/api/records/8275697\")\nrecord = r.json()\n\nrecord.keys()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\ndict_keys(['created', 'modified', 'id', 'conceptrecid', 'doi', 'conceptdoi', 'doi_url', 'metadata', 'title', 'links', 'updated', 'recid', 'revision', 'files', 'owners', 'status', 'stats', 'state', 'submitted'])\n```\n:::\n:::\n\n\nI was interested in the Zenodo metadata.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nrecord['metadata']\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n{'title': 'Party positions from Wikipedia tags (July 2023)',\n 'doi': '10.5281/zenodo.8275697',\n 'publication_date': '2023-08-23',\n 'description': '<p>Estimation of party positions from Wikipedia tags with Stan (July 2023)</p>',\n 'access_right': 'open',\n 'creators': [{'name': 'Holger DÃ¶ring',\n   'affiliation': 'GESIS â€“ Leibniz Institute for the Social Sciences'},\n  {'name': 'Michael Herrmann', 'affiliation': 'University of Konstanz'}],\n 'related_identifiers': [{'identifier': 'https://github.com/hdigital/partypositions-wikitags/tree/23.07',\n   'relation': 'isSupplementTo',\n   'scheme': 'url'}],\n 'version': '23.07',\n 'resource_type': {'title': 'Software', 'type': 'software'},\n 'license': {'id': 'other-open'},\n 'relations': {'version': [{'index': 1,\n    'is_last': True,\n    'parent': {'pid_type': 'recid', 'pid_value': '7043510'}}]}}\n```\n:::\n:::\n\n\n## GitHub metadata\n\nSome of the metadata is imported by Zenodo from Github and some metadata needs to be added or updated manually.\n\nYou can specify some of the addtional metadata in a `.zenodo.json` file in your GitHub repository.\n\n<https://developers.zenodo.org/#github>\n\nI used the archived Zenodo record for a json dump of the metadata.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nimport json\n\nprint(json.dumps(record['metadata'], indent=2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{\n  \"title\": \"Party positions from Wikipedia tags (July 2023)\",\n  \"doi\": \"10.5281/zenodo.8275697\",\n  \"publication_date\": \"2023-08-23\",\n  \"description\": \"<p>Estimation of party positions from Wikipedia tags with Stan (July 2023)</p>\",\n  \"access_right\": \"open\",\n  \"creators\": [\n    {\n      \"name\": \"Holger D\\u00f6ring\",\n      \"affiliation\": \"GESIS \\u2013 Leibniz Institute for the Social Sciences\"\n    },\n    {\n      \"name\": \"Michael Herrmann\",\n      \"affiliation\": \"University of Konstanz\"\n    }\n  ],\n  \"related_identifiers\": [\n    {\n      \"identifier\": \"https://github.com/hdigital/partypositions-wikitags/tree/23.07\",\n      \"relation\": \"isSupplementTo\",\n      \"scheme\": \"url\"\n    }\n  ],\n  \"version\": \"23.07\",\n  \"resource_type\": {\n    \"title\": \"Software\",\n    \"type\": \"software\"\n  },\n  \"license\": {\n    \"id\": \"other-open\"\n  },\n  \"relations\": {\n    \"version\": [\n      {\n        \"index\": 1,\n        \"is_last\": true,\n        \"parent\": {\n          \"pid_type\": \"recid\",\n          \"pid_value\": \"7043510\"\n        }\n      }\n    ]\n  }\n}\n```\n:::\n:::\n\n\nThen, I manually cleaned up the metadata:\n\n- kept only entries that are not imported automatically\n- used unicode characters for umlaute\n- specified license id\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nmetadata_json = \"\"\"\n{\n  \"title\": \"Party positions from Wikipedia tags\",\n  \"description\": \"Estimation of party positions from Wikipedia tags with Stan\",\n  \"creators\": [\n    {\n      \"name\": \"DÃ¶ring, Holger\",\n      \"affiliation\": \"GESIS â€“ Leibniz Institute for the Social Sciences\"\n    },\n    {\n      \"name\": \"Herrmann, Michael\",\n      \"affiliation\": \"University of Konstanz\"\n    }\n  ]\n}\n\"\"\"\n```\n:::\n\n\nHere, I validate the json. Running the cell should not raise an error.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nmetadata_json = json.loads(metadata_json)\n```\n:::\n\n\nFinally, I added it to the GitHub repository â€“ [commit ac7c462](https://github.com/hdigital/partypositions-wikitags/commit/ac7c4626267f9bf12015db57138d50c119982396) ðŸ˜Š\n\n---\n\n![](zenodo-logo.png)\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}