<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>learning-hd</title>
<link>https://hdigital.github.io/teaching/index.html</link>
<atom:link href="https://hdigital.github.io/teaching/index.xml" rel="self" type="application/rss+xml"/>
<description>Things I learned</description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Sat, 25 Feb 2023 23:00:00 GMT</lastBuildDate>
<item>
  <title>A few days of Quarto</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/2023-02-quarto/index.html</link>
  <description><![CDATA[ 




<section id="quarto" class="level2">
<h2 class="anchored" data-anchor-id="quarto">Quarto</h2>
<p>So I have had my first experience with creating dynamic documents in Quarto. It has been a pleasant experience. I could use some of my RMarkdown und knitr skills and like that it is a program independent of R and RStudio. Working in VS Code to create a blog on <em>Things I Learned</em> worked well.</p>
<p>Only working with Python was really challenging. For some time several attempts to find the local Python version in the <code>env</code> folder did not work. <code>quarto check</code> found the respective Python version but it was not used when I rendered the document. At the end it was simply the header option <code>jupyter: python3</code> in the qmd-document that did the trick.</p>
<p>Rendering a document with Python and R cells remained a challenge. Again, it was an option that was missing. Setting <code>#| python.reticulate: false</code> in a Python cell solved the issue.</p>
<p>Many of my Python struggles in Quarto may have been related to the <a href="https://rstudio.github.io/reticulate/">reticulate</a> R package.</p>
</section>
<section id="docker" class="level2">
<h2 class="anchored" data-anchor-id="docker">Docker</h2>
<p>To get there I also created a <code>Dockerfile</code> to have an OS independent version of Quarto. That was another challenge until I first found a <a href="https://github.com/rocker-org/rocker">Rocker</a> configuration that worked with Python. It is a whopping 4.5 GB image but incudes Latex to create pdf-files.</p>
<p>Later I did some more experimenting with Docker and created a Jupyter Lab Docker image that is also quite large with almost 5 GB. In addition, I created a smaller image that includes only a minimal Python and Jupyter Lab. At least this one is a little smaller than 1 GB.</p>
<p>I’ll try to work with the local Quarto versions mainly but it is good to have OS independent Docker versions as well.</p>
</section>
<section id="python-in-quarto" class="level2">
<h2 class="anchored" data-anchor-id="python-in-quarto">Python in Quarto</h2>
<p>Here is a <a href="https://quarto.org/docs/computations/python.html#code-blocks">Quarto Guide</a> demonstration of a line plot on a polar axis, see Figure&nbsp;1.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">r <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="fl" style="color: #AD0000;">0.01</span>)</span>
<span id="cb1-5">theta <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">*</span> np.pi <span class="op" style="color: #5E5E5E;">*</span> r</span>
<span id="cb1-6">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(</span>
<span id="cb1-7">  subplot_kw <span class="op" style="color: #5E5E5E;">=</span> {<span class="st" style="color: #20794D;">'projection'</span>: <span class="st" style="color: #20794D;">'polar'</span>}</span>
<span id="cb1-8">)</span>
<span id="cb1-9">ax.plot(theta, r)</span>
<span id="cb1-10">ax.set_rticks([<span class="fl" style="color: #AD0000;">0.5</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="fl" style="color: #AD0000;">1.5</span>, <span class="dv" style="color: #AD0000;">2</span>])</span>
<span id="cb1-11">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb1-12">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-polar" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-quarto/index_files/figure-html/fig-polar-output-1.png" width="450" height="439" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: A line plot on a polar axis</figcaption><p></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Docker</category>
  <category>Python</category>
  <category>Quarto</category>
  <guid>https://hdigital.github.io/teaching/posts/2023-02-quarto/index.html</guid>
  <pubDate>Sat, 25 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/2023-02-quarto/thumbnail.png" medium="image" type="image/png" height="35" width="144"/>
</item>
<item>
  <title>TIL // February</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/2023-02-til/index.html</link>
  <description><![CDATA[ 




<section id="til-february" class="level1">
<h1>TIL February</h1>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">25.2.</h2>
<p>I worked on <a href="https://github.com/hdigital/mixtape">code</a> from a causal inference book. It includes Stata, R and Python versions of the examples.</p>
<p>For R and Python I wanted to have one environment to install all dependencies. This led me to <a href="https://docs.conda.io/projects/conda/en/stable/user-guide/getting-started.html">conda</a>.</p>
<p>Creating a new conda environment in a new file was extremly slow. It also took me a while to fully configure Jupyter Lab with Python and R.</p>
<p>At the end, VS Code seems to be the move convinient interface.</p>
<hr>
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-til/computer-argonne.jpg" class="img-fluid"></p>


</section>
</section>

 ]]></description>
  <category>packaging</category>
  <guid>https://hdigital.github.io/teaching/posts/2023-02-til/index.html</guid>
  <pubDate>Fri, 24 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/2023-02-til/computer-argonne.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hello Jupyter</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/2023-02-22-hello-jupyter/index.html</link>
  <description><![CDATA[ 




<p>I used my new Quarto and Jupyter skills to <a href="https://github.com/hdigital/HalloJupyterDSS/commits/main">create web pages</a> for an introduction to notebooks that Arnim Bleier gave recently at GESIS DSS.</p>
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-22-hello-jupyter/arnim-fork.png" class="img-fluid"></p>



 ]]></description>
  <category>Python</category>
  <category>Quarto</category>
  <guid>https://hdigital.github.io/teaching/posts/2023-02-22-hello-jupyter/index.html</guid>
  <pubDate>Tue, 21 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/2023-02-22-hello-jupyter/arnim-fork.png" medium="image" type="image/png" height="111" width="144"/>
</item>
<item>
  <title>Jupyter notebooks with Quarto</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/2023-02-18-jupyter/index.html</link>
  <description><![CDATA[ 




<p><a href="https://jupyter.org/try-jupyter/lab/index.html">Jupyter</a> notebooks can be rendered with <a href="https://quarto.org/docs/tools/jupyter-lab.html">Quarto</a>.</p>
<p>In a first step, I create a simple notebook with the code from the Quarto documentation on Jupyter Lab. Secondly, I copied the notebook and added a Quarto header in a <a href="https://quarto.org/docs/tools/jupyter-lab.html#yaml-front-matter">Raw first cell</a>. Finally, I converted the original notebook into a Quarto document with <code>quarto convert</code>.</p>
<p>I rendered all versions of the Jupyter notebook with Quarto and here are the results:</p>
<ul>
<li><a href="../../snippets/jupyter.html">Jupyter notebook</a></li>
<li><a href="../../snippets/jupyter-options.html">notebook with Quarto first cell</a></li>
<li><a href="../../snippets/jupyter-quarto.html">notebook converted to Quarto document</a></li>
</ul>
<p>I also learned that you have to pass an option when rendering ipynb-files – <code>quarto render notebook.ipynb --execute</code>. The assumption is that a notebook was already run and that the results shall be rendered.</p>
<p>This all worked well for me and it solved a major issue I had with Jupyter notebooks. With R Markdown I really liked that you could convert a notebook into static HTML. To my knowledge, this was not possible with Jupyter notebooks. They could be exported to HTML in Jupyter Lab but not rendered into HTML.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-18-jupyter/jupyterlab-preview.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Jupyter Lab</figcaption><p></p>
</figure>
</div>



 ]]></description>
  <category>Python</category>
  <category>Quarto</category>
  <guid>https://hdigital.github.io/teaching/posts/2023-02-18-jupyter/index.html</guid>
  <pubDate>Fri, 17 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/2023-02-18-jupyter/jupyterlab-preview.png" medium="image" type="image/png" height="90" width="144"/>
</item>
<item>
  <title>Horizontal bar chart</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index.html</link>
  <description><![CDATA[ 




<p>To have horizontal bar charts ordered by frequency, I have used <code>geom_bar()</code> and <code>coord_flip</code> for a long time.</p>
<p>I have now learned in an <a href="https://www.eoda.de/en/wissen/blog/10-tidyverse-functions-that-might-save-your-day/#fct_reorder">example</a> that this is not necessary.</p>
<p>Here are a few examples and the code for future references.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">mtcars <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as_tibble</span>(datasets<span class="sc" style="color: #5E5E5E;">::</span>mtcars)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">ggplot</span>(mtcars, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> cyl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;">geom_bar</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"lightgreen"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I used to do some pre-processing to prepare data for the plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">pl_dt <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb3-2">  mtcars <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">cyl =</span> <span class="fu" style="color: #4758AB;">fct_infreq</span>(<span class="fu" style="color: #4758AB;">factor</span>(cyl)) <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">fct_rev</span>())</span></code></pre></div>
</div>
<p>For the figure, I used <code>coord_flip</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">ggplot</span>(pl_dt, <span class="fu" style="color: #4758AB;">aes</span>(cyl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">geom_bar</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">coord_flip</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>That was not necessary, as I have learned now.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">ggplot</span>(pl_dt, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y =</span> cyl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">geom_bar</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"lightblue"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here is an alternative approach with <code>geom_col()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">pl_dt <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb6-2">  mtcars <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">count</span>(cyl) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">cyl =</span> <span class="fu" style="color: #4758AB;">fct_reorder</span>(<span class="fu" style="color: #4758AB;">factor</span>(cyl), n))</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="fu" style="color: #4758AB;">ggplot</span>(pl_dt, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> n, <span class="at" style="color: #657422;">y =</span> cyl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;">geom_col</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"lightblue"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>



 ]]></description>
  <category>R</category>
  <category>ggplot</category>
  <guid>https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/index.html</guid>
  <pubDate>Thu, 16 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/2023-02-17-geom-col/thumbnail.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Things I learned: A new TIL</title>
  <dc:creator>Holger Döring</dc:creator>
  <link>https://hdigital.github.io/teaching/posts/welcome/index.html</link>
  <description><![CDATA[ 




<p>My idea is to keep a more systematic collection of <em>things I learned</em> (TIL).</p>
<p>I was inspired by posts of <a href="https://til.simonwillison.net/">Simon Wilson</a> and <a href="https://lincolnloop.com/insights/by-author/peter-baumgartner/">Peter Baumgartner</a> that documented things they have learned.</p>
<p>So here is an initial version and today the TIL has been <a href="https://quarto.org/">Quarto</a>.</p>
<p>Here is an example of integrating <strong>Tidyverse-R</strong> code.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3">mtcars <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as_tibble</span>(datasets<span class="sc" style="color: #5E5E5E;">::</span>mtcars)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">ggplot</span>(mtcars, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> hp, <span class="at" style="color: #657422;">y =</span> mpg)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">factor</span>(cyl))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;">geom_smooth</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://hdigital.github.io/teaching/posts/welcome/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here is an example of integrating <strong>Python</strong> code.</p>
<div class="cell" data-python.reticulate="false">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">import</span> statsmodels.api <span class="im" style="color: #00769E;">as</span> sm</span>
<span id="cb2-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb2-3"></span>
<span id="cb2-4">mtcars <span class="op" style="color: #5E5E5E;">=</span> sm.datasets.get_rdataset(<span class="st" style="color: #20794D;">'mtcars'</span>).data</span>
<span id="cb2-5"></span>
<span id="cb2-6">mtcars.plot(x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"hp"</span>, y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"mpg"</span>, kind <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"scatter"</span>)</span></code></pre></div>
</div>
<hr>
<section id="some-background" class="level2">
<h2 class="anchored" data-anchor-id="some-background">Some background</h2>
<p>Setting up a blog in Quarto was easy and well documented. So I started quickly.</p>
<p>Getting the right Python version running in Quarto was quite a challenge. <del>At the end, the documented recommendation to work with a virtual environment in an <code>env</code> folder worked. It took me some time to get there.</del></p>
<p>It only worked temporarily and I will try to run Python in Quarto again at some later point.</p>
</section>
<section id="afterwards" class="level2">
<h2 class="anchored" data-anchor-id="afterwards">Afterwards</h2>
<p>It turned out that the particular challenge was having a page with R and Python.</p>
<p>For Python pages a header option was missing. <code>jupyter: python3</code> solved the Python challenge that took quite some time.</p>
<p>Rendering a Quarto document with <strong>R and Python</strong> was only possible with a version Docker on the computer.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Quarto</category>
  <guid>https://hdigital.github.io/teaching/posts/welcome/index.html</guid>
  <pubDate>Wed, 15 Feb 2023 23:00:00 GMT</pubDate>
  <media:content url="https://hdigital.github.io/teaching/posts/welcome/thumbnail.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
