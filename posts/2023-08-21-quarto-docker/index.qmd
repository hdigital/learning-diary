---
date: "2023-08-21"
image: quarto-logo.png
categories: [Docker, Quarto]
---

# Quarto version in Docker

I realized that installing the latest version of [Quarto](https://quarto.org/) in [Docker](https://docs.docker.com/get-started/) will not lead to a reproducible environment since the latest Docker version depends on the day an image is build. So I was looking for a `Dockerfile` configuration to install a specified version of Quarto in Docker.

Quarto keeps a list of [releases](https://github.com/quarto-dev/quarto-cli/releases/) so that I had to figure out what the download url is. This was easy. The version number is used in the Quarto section of a Docker file three times so that I also wanted to find a way to specify that version in variable. This was a little more tricky.

For the final solution I needed several attempts but learned someting about defining arguments in a `Dockerfile`.

Here is the solution I came up with.

```docker
ARG QUARTO_VERSION=1.3.450
RUN apt-get -y update && apt-get install -y --no-install-recommends curl gdebi-core
RUN curl -LO https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb
RUN gdebi --non-interactive quarto-${QUARTO_VERSION}-linux-amd64.deb
RUN install2.r markdown reticulate
# RUN quarto install tinytex
```

This is the version for the latest release I have used so far.

```docker
RUN apt-get -y update && apt-get install -y --no-install-recommends curl gdebi-core
RUN curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
RUN gdebi --non-interactive quarto-linux-amd64.deb
RUN install2.r markdown reticulate
# RUN quarto install tinytex
```

---

![](docker-logo.png)
